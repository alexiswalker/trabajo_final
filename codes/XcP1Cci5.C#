using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using bnet.protocol.toon.external;
using D3Server.Database;
using bnet.protocol;

namespace D3Server.Services
{
    class D3ToonServiceExternal : ToonServiceExternal, ID3Service
    {
        D3ServerProvider serverProvider;

        public void SetProvider(D3ServerProvider provider)
        {
            serverProvider = provider;
        }

        public override void ToonList(Google.ProtocolBuffers.IRpcController controller, ToonListRequest request, Action<ToonListResponse> done)
        {
            var builder = ToonListResponse.CreateBuilder();
            var eib = EntityId.CreateBuilder();
            var table = serverProvider.ToonsTableAdapter.GetDataByAccount((long)serverProvider.clientData.accountId);
            foreach (var row in table.Rows)
            {
                var trow = (ToonsSet.ToonsRow)row;
                eib.SetHigh(D3ServerConst.TOON_HIGH);
                eib.SetLow((ulong)trow.ID);
                builder.AddToons(eib.Build());
                eib.Clear();
            }
            if (serverProvider.toonSubscribed)
            {
                serverProvider.sendAdditionalData = true;
                serverProvider.additionalData = serverProvider.HashToInternalService[3213656212].id.ToString("X2") + "01 00 00 09 97 02 1A 94 02 AA 06 90 02 0A 12 09 33 44 00 00 62 01 00 03 11 C8 2C C5 33 A3 54 63 CB 12 24 0A 22 0A 0A 08 B3 88 01 10 02 18 01 20 00 12 14 3A 12 08 08 10 03 18 04 20 0B 28 14 30 07 38 0B 40 04 48 01 12 16 0A 14 0A 0A 08 B3 88 01 10 03 18 01 20 00 12 06 18 B1 83 9A EA 01 12 12 0A 10 0A 0A 08 B3 88 01 10 03 18 02 20 00 12 02 18 01 12 35 0A 33 0A 0A 08 B3 88 01 10 03 18 03 20 00 12 25 3A 23 0A 02 20 00 0A 02 20 00 0A 02 20 00 0A 02 20 00 0A 05 0D D9 EB 48 05 0A 02 20 00 0A 02 20 00 0A 02 20 00 12 12 0A 10 0A 0A 08 B3 88 01 10 03 18 04 20 00 12 02 18 02 12 1F 0A 1D 0A 0A 08 CE 84 01 10 03 18 02 20 00 12 0F 2A 0D 46 65 6D 57 69 7A 61 72 64 23 37 33 36 12 12 0A 10 0A 0A 08 CE 84 01 10 03 18 03 20 00 12 02 10 00 12 14 0A 12 0A 0A 08 CE 84 01 10 03 18 09 20 00 12 04 42 02 44 33 12 12 0A 10 0A 0A 08 CE 84 01 10 03 18 0A 20 00 12 02 18 00";
                serverProvider.additionalData += serverProvider.HashToInternalService[3213656212].id.ToString("X2") + "010000089c021a9902aa0695020a1209334400006201000311f56e7d6e735c389612240a220a0a08b3880110021801200012143a12080810031804200b28143007380b40044801121b0a190a0a08b38801100318012000120b18c9acaec4fcffffffff0112120a100a0a08b388011003180220001202180112320a300a0a08b3880110031803200012223a200a0220000a0220000a0220000a0220000a0220000a0220000a0220000a02200012120a100a0a08b388011003180420001202180012220a200a0a08ce840110031802200012122a10436f726e656c696f75734a442332323612120a100a0a08ce84011003180320001202100012140a120a0a08ce840110031809200012044202443312120a100a0a08ce84011003180a200012021800";
                //serverProvider.additionalData += 
            }
            done(builder.Build());
        }

        public override void SelectToon(Google.ProtocolBuffers.IRpcController controller, SelectToonRequest request, Action<SelectToonResponse> done)
        {
            var builder = SelectToonResponse.CreateBuilder();
            serverProvider.sendAdditionalData = true;
            serverProvider.additionalData = serverProvider.HashToInternalService[3213656212].id.ToString("X2");
            if(request.Toon.Low == 0)
            {
                serverProvider.additionalData += "0600000970126eaa066b0a1209334400006201000311c82cc533a35463cb12120a100a0a08ce84011003180320001202100012120a100a0a08ce84011003180520001202180012190a170a0a08ce84011003180a2000120918cce3ddcefc8eab0212120a0e0a0a08ce84011003180b200012001001";
            }
            else if(request.Toon.Low != 0xcb6354a333c52cc8UL)
            {
                serverProvider.additionalData += "060000096e126caa06690a1209334400006201000311c82cc533a35463cb12120a100a0a08ce84011003180320001202100112190a170a0a08ce84011003180a2000120918c8a28ecdfc8eab0212240a220a0a08ce84011003180b200012143a120946ee00000000000411ddb463e78244684e";
            }
            else
            {
                serverProvider.additionalData += "060000096e126caa06690a1209334400006201000311c82cc533a35463cb12120a100a0a08ce84011003180320001202100112190a170a0a08ce84011003180a2000120918c8a28ecdfc8eab0212240a220a0a08ce84011003180b200012143a120946ee00000000000411ddb463e78244684e";
            }
            done(builder.Build());
        }

        public override void CreateToon(Google.ProtocolBuffers.IRpcController controller, CreateToonRequest request, Action<CreateToonResponse> done)
        {
            throw new NotImplementedException();
        }

        public override void DeleteToon(Google.ProtocolBuffers.IRpcController controller, DeleteToonRequest request, Action<DeleteToonResponse> done)
        {
            throw new NotImplementedException();
        }
    }
}