import Control.Monad.STM
import Control.Concurrent.STM.TVar
import Control.Concurrent.Chan
import Control.Concurrent

runServer :: IO ()
runServer = someMain

apply :: TVar Int -> (Int -> Int) -> STM ()
apply tVar f = do
   oldVal <- readTVar tVar
   let newVal = f oldVal
   writeTVar tVar newVal
   if newVal < 10 then retry else return ()

someMain :: IO ()
someMain = do
   jackie <- newChan
   tVar <- atomically $ newTVar 5
   forkIO $ atomically (apply tVar (+4)) >> writeChan jackie ()
   forkIO $ atomically (apply tVar (+14)) >> writeChan jackie ()
   readChan jackie
   atomically (readTVar tVar) >>= putStrLn . show