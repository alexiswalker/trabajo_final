extern crate futures;
extern crate hyper;
extern crate tokio_core;

use std::io::{self, Write};
use futures::{Future, Stream};
use hyper::{Client, Uri};
use tokio_core::reactor::Core;

fn main() {

 let mut core = Core::new().unwrap();
let client = Client::new(&core.handle());
let url : Uri = "http://www.wttr.in/Paris".parse().unwrap();

let request = client.get(url)
        .and_then(|res| {
    println!("Response: {}", res.status());

    // res.body().for_each(|chunk| {
    //     io::stdout()
    //         .write_all(&chunk)
    //         .map_err(From::from)
    // })

res.body().concat2().and_then(move |body| {
    io::stdout().write_all(&body).ok();
    Ok(())
})

});

 core.run(request).unwrap();
}