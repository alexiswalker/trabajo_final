From 8ea37769738f8c2f99c0156c3ef274b04e114dcd Mon Sep 17 00:00:00 2001
From: montellese <montellese@xbmc.org>
Date: Tue, 11 Oct 2011 13:37:10 +0200
Subject: [PATCH] jsonrpc: replace Files.Download with Files.PrepareDownload and Files.Download

---
 xbmc/interfaces/json-rpc/FileOperations.cpp        |   18 ++++++++++++++++++
 xbmc/interfaces/json-rpc/FileOperations.h          |    2 ++
 xbmc/interfaces/json-rpc/ITransportLayer.h         |    6 ++++--
 .../interfaces/json-rpc/JSONServiceDescription.cpp |    3 ++-
 xbmc/interfaces/json-rpc/JSONUtils.h               |    6 ++++--
 xbmc/interfaces/json-rpc/ServiceDescription.h      |   18 +++++++++++++++---
 xbmc/interfaces/json-rpc/methods.json              |   18 +++++++++++++++---
 xbmc/interfaces/python/xbmcmodule/pyjsonrpc.h      |    1 +
 xbmc/network/TCPServer.cpp                         |    5 +++++
 xbmc/network/TCPServer.h                           |    1 +
 xbmc/network/WebServer.cpp                         |   16 +++++++++++-----
 xbmc/network/WebServer.h                           |    2 ++
 12 files changed, 80 insertions(+), 16 deletions(-)

diff --git a/xbmc/interfaces/json-rpc/FileOperations.cpp b/xbmc/interfaces/json-rpc/FileOperations.cpp
index d53856d..c1c9ed6 100644
--- a/xbmc/interfaces/json-rpc/FileOperations.cpp
+++ b/xbmc/interfaces/json-rpc/FileOperations.cpp
@@ -162,6 +162,24 @@ JSON_STATUS CFileOperations::GetDirectory(const CStdString &method, ITransportLa
   return InvalidParams;
 }
 
+JSON_STATUS CFileOperations::PrepareDownload(const CStdString &method, ITransportLayer *transport, IClient *client, const CVariant &parameterObject, CVariant &result)
+{
+  std::string protocol;
+  if (transport->PrepareDownload(parameterObject["path"].asString().c_str(), result["details"], protocol))
+  {
+    result["protocol"] = protocol;
+
+    if ((transport->GetCapabilities() & FileDownloadDirect) == FileDownloadDirect)
+      result["mode"] = "direct";
+    else
+      result["mode"] = "redirect";
+
+    return OK;
+  }
+  
+  return InvalidParams;
+}
+
 JSON_STATUS CFileOperations::Download(const CStdString &method, ITransportLayer *transport, IClient *client, const CVariant &parameterObject, CVariant &result)
 {
   return transport->Download(parameterObject["path"].asString().c_str(), result) ? OK : InvalidParams;
diff --git a/xbmc/interfaces/json-rpc/FileOperations.h b/xbmc/interfaces/json-rpc/FileOperations.h
index f6d39a7..e4339b4 100644
--- a/xbmc/interfaces/json-rpc/FileOperations.h
+++ b/xbmc/interfaces/json-rpc/FileOperations.h
@@ -31,6 +31,8 @@ namespace JSONRPC
   public:
     static JSON_STATUS GetRootDirectory(const CStdString &method, ITransportLayer *transport, IClient *client, const CVariant &parameterObject, CVariant &result);
     static JSON_STATUS GetDirectory(const CStdString &method, ITransportLayer *transport, IClient *client, const CVariant &parameterObject, CVariant &result);
+    
+    static JSON_STATUS PrepareDownload(const CStdString &method, ITransportLayer *transport, IClient *client, const CVariant &parameterObject, CVariant &result);
     static JSON_STATUS Download(const CStdString &method, ITransportLayer *transport, IClient *client, const CVariant &parameterObject, CVariant &result);
 
     static bool FillFileItem(const CStdString &strFilename, CFileItem &item, CStdString media = "");
diff --git a/xbmc/interfaces/json-rpc/ITransportLayer.h b/xbmc/interfaces/json-rpc/ITransportLayer.h
index 7fd3bf7..a0b6316 100644
--- a/xbmc/interfaces/json-rpc/ITransportLayer.h
+++ b/xbmc/interfaces/json-rpc/ITransportLayer.h
@@ -31,15 +31,17 @@ namespace JSONRPC
   {
     Response = 0x1,
     Announcing = 0x2,
-    FileDownload = 0x4,
+    FileDownloadRedirect = 0x4,
+    FileDownloadDirect = 0x8
   };
 
-  #define TRANSPORT_LAYER_CAPABILITY_ALL (Response | Announcing | FileDownload)
+  #define TRANSPORT_LAYER_CAPABILITY_ALL (Response | Announcing | FileDownloadRedirect | FileDownloadDirect)
 
   class ITransportLayer
   {
   public:
     virtual ~ITransportLayer() { };
+    virtual bool PrepareDownload(const char *path, CVariant &details, std::string &protocol) = 0;
     virtual bool Download(const char *path, CVariant &result) = 0;
     virtual int GetCapabilities() = 0;
   };
diff --git a/xbmc/interfaces/json-rpc/JSONServiceDescription.cpp b/xbmc/interfaces/json-rpc/JSONServiceDescription.cpp
index d771a43..6e2cd41 100644
--- a/xbmc/interfaces/json-rpc/JSONServiceDescription.cpp
+++ b/xbmc/interfaces/json-rpc/JSONServiceDescription.cpp
@@ -127,8 +127,9 @@ JsonRpcMethodMap CJSONServiceDescription::m_methodMaps[] = {
 
 // Files
   { "Files.GetSources",                             CFileOperations::GetRootDirectory },
-  { "Files.Download",                               CFileOperations::Download },
   { "Files.GetDirectory",                           CFileOperations::GetDirectory },
+  { "Files.PrepareDownload",                        CFileOperations::PrepareDownload },
+  { "Files.Download",                               CFileOperations::Download },
 
 // Music Library
   { "AudioLibrary.GetArtists",                      CAudioLibrary::GetArtists },
diff --git a/xbmc/interfaces/json-rpc/JSONUtils.h b/xbmc/interfaces/json-rpc/JSONUtils.h
index 1d392c6..984f576 100644
--- a/xbmc/interfaces/json-rpc/JSONUtils.h
+++ b/xbmc/interfaces/json-rpc/JSONUtils.h
@@ -260,8 +260,10 @@ namespace JSONRPC
     {
       if (transport.compare("Announcing") == 0)
         return Announcing;
-      if (transport.compare("FileDownload") == 0)
-        return FileDownload;
+      if (transport.compare("FileDownloadDirect") == 0)
+        return FileDownloadDirect;
+      if (transport.compare("FileDownloadRedirect") == 0)
+        return FileDownloadRedirect;
 
       return Response;
     }
diff --git a/xbmc/interfaces/json-rpc/ServiceDescription.h b/xbmc/interfaces/json-rpc/ServiceDescription.h
index fec6147..7f50518 100644
--- a/xbmc/interfaces/json-rpc/ServiceDescription.h
+++ b/xbmc/interfaces/json-rpc/ServiceDescription.h
@@ -1296,10 +1296,10 @@ namespace JSONRPC
         "}"
       "}"
     "}",
-    "\"Files.Download\": {"
+    "\"Files.PrepareDownload\": {"
       "\"type\": \"method\","
       "\"description\": \"Provides a way to download a given file (e.g. providing an URL to the real file location)\","
-      "\"transport\": [ \"Response\", \"FileDownload\" ],"
+      "\"transport\": [ \"Response\", \"FileDownloadRedirect\" ],"
       "\"permission\": \"ReadData\","
       "\"params\": ["
         "{ \"name\": \"path\", \"type\": \"string\", \"required\": true }"
@@ -1307,10 +1307,22 @@ namespace JSONRPC
       "\"returns\": {"
         "\"type\": \"object\","
         "\"properties\": {"
-          "\"path\": { \"type\": \"string\", \"required\": true }"
+          "\"protocol\": { \"type\": \"string\", \"enum\": [ \"http\", \"jsonrpc\" ], \"required\": true },"
+          "\"id\": { \"type\": \"string\", \"required\": true },"
+          "\"mode\": { \"type\": \"string\", \"enum\": [ \"redirect\", \"direct\" ], \"required\": true, \"description\": \"Direct mode allows using Files.Download whereas redirect mode requires the usage of a different protocol\" }"
         "}"
       "}"
     "}",
+    "\"Files.Download\": {"
+      "\"type\": \"method\","
+      "\"description\": \"Downloads the given file\","
+      "\"transport\": [ \"Response\", \"FileDownloadDirect\" ],"
+      "\"permission\": \"ReadData\","
+      "\"params\": ["
+        "{ \"name\": \"path\", \"type\": \"string\", \"required\": true }"
+      "],"
+      "\"returns\": { \"type\": \"any\", \"required\": true }"
+    "}",
     "\"Files.GetDirectory\": {"
       "\"type\": \"method\","
       "\"description\": \"Get the directories and files in the given directory\","
diff --git a/xbmc/interfaces/json-rpc/methods.json b/xbmc/interfaces/json-rpc/methods.json
index 08a601e..e705103 100644
--- a/xbmc/interfaces/json-rpc/methods.json
+++ b/xbmc/interfaces/json-rpc/methods.json
@@ -519,10 +519,10 @@
       }
     }
   },
-  "Files.Download": {
+  "Files.PrepareDownload": {
     "type": "method",
 		"description": "Provides a way to download a given file (e.g. providing an URL to the real file location)",
-    "transport": [ "Response", "FileDownload" ],
+    "transport": [ "Response", "FileDownloadRedirect" ],
     "permission": "ReadData",
     "params": [
       { "name": "path", "type": "string", "required": true }
@@ -530,10 +530,22 @@
     "returns": {
       "type": "object",
       "properties": {
-        "path": { "type": "string", "required": true }
+				"protocol": { "type": "string", "enum": [ "http", "jsonrpc" ], "required": true },
+        "details": { "type": "any", "required": true, "description": "Transport specific details on how/from where to download the given file" },
+				"mode": { "type": "string", "enum": [ "redirect", "direct" ], "required": true, "description": "Direct mode allows using Files.Download whereas redirect mode requires the usage of a different protocol" }
       }
     }
   },
+  "Files.Download": {
+    "type": "method",
+		"description": "Downloads the given file",
+    "transport": [ "Response", "FileDownloadDirect" ],
+    "permission": "ReadData",
+    "params": [
+      { "name": "path", "type": "string", "required": true }
+    ],
+    "returns": { "type": "any", "required": true }
+  },
   "Files.GetDirectory": {
     "type": "method",
 		"description": "Get the directories and files in the given directory",
diff --git a/xbmc/interfaces/python/xbmcmodule/pyjsonrpc.h b/xbmc/interfaces/python/xbmcmodule/pyjsonrpc.h
index c7d4efd..6990c68 100644
--- a/xbmc/interfaces/python/xbmcmodule/pyjsonrpc.h
+++ b/xbmc/interfaces/python/xbmcmodule/pyjsonrpc.h
@@ -27,6 +27,7 @@
 class CPythonTransport : public JSONRPC::ITransportLayer
 {
 public:
+  virtual bool PrepareDownload(const char *path, CVariant &details, std::string &protocol) { return false; }
   virtual bool Download(const char *path, CVariant &result) { return false; }
   virtual int GetCapabilities() { return JSONRPC::Response; }
 
diff --git a/xbmc/network/TCPServer.cpp b/xbmc/network/TCPServer.cpp
index 5592f39..4b0d9ad 100644
--- a/xbmc/network/TCPServer.cpp
+++ b/xbmc/network/TCPServer.cpp
@@ -170,6 +170,11 @@ void CTCPServer::Process()
   Deinitialize();
 }
 
+bool CTCPServer::PrepareDownload(const char *path, CVariant &details, std::string &protocol)
+{
+  return false;
+}
+
 bool CTCPServer::Download(const char *path, CVariant &result)
 {
   return false;
diff --git a/xbmc/network/TCPServer.h b/xbmc/network/TCPServer.h
index c952ab9..1d82097 100644
--- a/xbmc/network/TCPServer.h
+++ b/xbmc/network/TCPServer.h
@@ -36,6 +36,7 @@ namespace JSONRPC
     static bool StartServer(int port, bool nonlocal);
     static void StopServer(bool bWait);
 
+    virtual bool PrepareDownload(const char *path, CVariant &details, std::string &protocol);
     virtual bool Download(const char *path, CVariant &result);
     virtual int GetCapabilities();
 
diff --git a/xbmc/network/WebServer.cpp b/xbmc/network/WebServer.cpp
index afd96be..99988ee 100644
--- a/xbmc/network/WebServer.cpp
+++ b/xbmc/network/WebServer.cpp
@@ -520,7 +520,7 @@ void CWebServer::SetCredentials(const CStdString &username, const CStdString &pa
   m_needcredentials = !password.IsEmpty();
 }
 
-bool CWebServer::Download(const char *path, CVariant &result)
+bool CWebServer::PrepareDownload(const char *path, CVariant &details, std::string &protocol)
 {
   bool exists = false;
   CFile *file = new CFile();
@@ -534,17 +534,23 @@ bool CWebServer::Download(const char *path, CVariant &result)
 
   if (exists)
   {
-    string str = "vfs/";
-    str += path;
-    result["path"] = str;
+    protocol = "http";
+    string url = "vfs/";
+    url += path;
+    details["path"] = url;
   }
 
   return exists;
 }
 
+bool CWebServer::Download(const char *path, CVariant &result)
+{
+  return false;
+}
+
 int CWebServer::GetCapabilities()
 {
-  return Response | FileDownload;
+  return Response | FileDownloadRedirect;
 }
 
 const char *CWebServer::CreateMimeTypeFromExtension(const char *ext)
diff --git a/xbmc/network/WebServer.h b/xbmc/network/WebServer.h
index 98805b2..ab97956 100644
--- a/xbmc/network/WebServer.h
+++ b/xbmc/network/WebServer.h
@@ -47,6 +47,8 @@ public:
   bool Stop();
   bool IsStarted();
   void SetCredentials(const CStdString &username, const CStdString &password);
+
+  virtual bool PrepareDownload(const char *path, CVariant &details, std::string &protocol);
   virtual bool Download(const char *path, CVariant &result);
   virtual int GetCapabilities();
 private:
-- 
1.7.4.msysgit.0