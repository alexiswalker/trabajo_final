public static IQueryable<T> GetQuery<T>(string select, string where, List<int> @in) where T : class
{
	var parameter = Expression.Parameter(typeof(T));

	var method = @in.GetType().GetMethod("Contains");
	var call = Expression.Call(Expression.Constant(@in), method, Expression.Property(parameter, where));
	// TODO .Select(select)

	var lambda = Expression.Lambda<Func<T, bool>>(call, parameter);

	return null;
}