def op(num, lista, val):
    if num == 1:
        return [lista[0]+val, lista[1]+"+"+str(val)]

    elif num == 2:
        return [lista[0]-val, lista[1]+"-"+str(val)]
    
    elif num == 3:
        return [lista[0]*val, "(" + lista[1]+")*"+str(val)]

    elif num == 4:
        return [lista[0]/val, "(" + lista[1]+")/"+str(val)]

def bfs(val, n):
    fila = []

    fila.append([val+val, str(val)+"+"+str(val)])
    fila.append([val-val, str(val)+"-"+str(val)])
    fila.append([val/val, str(val)+"/"+str(val)])
    fila.append([val*val, str(val)+"*"+str(val)])

    while True:
        x = len(fila)

        for i in range(len(fila)):
            if fila[i][0] == n:
                print fila[i][1]
                return 0
            for j in range(1,5):
                fila.append(op(j, fila[i], val))
        
        fila = fila[x:]

n, p = map(int, raw_input().split())

bfs(p, n)