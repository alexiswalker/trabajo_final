;TRANSACCIONES BANCARIAS CON ATOMOS EN UN UNICO THREAD
(defn transferirDinero [desde hasta cantidad]
  (when (>= @desde cantidad)
    (swap! desde - cantidad)
    ;Ponemos un sleep para que la transacción sea más realista
    ;(Thread/sleep (rand-int 15))
    (swap! hasta + cantidad)))

;Realiza transacciones random
(defn transaccionesRandom [cuenta1 cuenta2 n]
  (dotimes [_ n]
    (let [[desde hasta] (shuffle [cuenta1 cuenta2])]
      (transferirDinero desde hasta (rand-int @desde)))))

;Ambas cuentas tienen inicialmente 50 pesos
(def cuenta-a (atom 50))
(def cuenta-b (atom 50))

;Realizo n transacciones random entre ambas cuentas
(transaccionesRandom cuenta-a cuenta-b 1000)

;Desreferencio los átomos para ver el estado de las cuentas
@cuenta-a
@cuenta-b

;La suma de ambas cuentas da 100, perfecto.