diff --git a/src/ddmd/dmodule.d b/src/ddmd/dmodule.d
index e5a956009..6377d753a 100644
--- a/src/ddmd/dmodule.d
+++ b/src/ddmd/dmodule.d
@@ -424,8 +424,36 @@ extern (C++) final class Module : Package
         objfile = setOutfile(global.params.objname, global.params.objdir, filename, global.obj_ext);
         if (doDocComment)
             setDocfile();
-        if (doHdrGen)
+        if (doHdrGen) {        	
+        	// in case dmd got an absolute file name it is not working even an objdir as given            
+            if(FileName.absolute(arg) && global.params.objdir)
+            {
+	            import std.array : array;
+            	import std.algorithm : startsWith;
+            	import std.conv : to;
+            	import std.path : pathSplitter;
+            	import std.string : join, split, toStringz;
+		    	
+		    	// for some reasons std.path.pathSeparator is ':'
+		    	version (Windows)
+                {
+                    auto pathSeparator = '\\';
+                }
+                else
+                {
+                    auto pathSeparator = '/';
+                }
+            	
+            	// making arg beeing a relative path so setOutfile can handle it
+            	auto argParts = arg.to!string.pathSplitter.array;
+            	auto objdirParts = global.params.objdir.to!string.pathSplitter.array;
+            	
+            	if(argParts.startsWith(objdirParts))
+	            	arg = argParts[objdirParts.length-1..$].join(pathSeparator).toStringz;
+            }
+        	
             hdrfile = setOutfile(global.params.hdrname, global.params.hdrdir, arg, global.hdr_ext);
+        }
         //objfile = new File(objfilename);
     }
 
@@ -560,12 +588,14 @@ extern (C++) final class Module : Package
                 argdoc = arg;
             else
                 argdoc = FileName.name(arg);
+            
             // If argdoc doesn't have an absolute path, make it relative to dir
             if (!FileName.absolute(argdoc))
             {
                 //FileName::ensurePathExists(dir);
                 argdoc = FileName.combine(dir, argdoc);
             }
+            
             docfilename = FileName.forceExt(argdoc, ext);
         }
         if (FileName.equals(docfilename, srcfile.name.str))