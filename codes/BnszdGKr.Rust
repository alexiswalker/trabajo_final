pub trait MyTrait {
    fn method1(&mut self, other: &mut MyTrait) {
		self.method2(other);

		// `Self` does not have a constant size known at compile-time
    	// help: the trait `std::marker::Sized` is not implemented for `Self`
    	// help: consider adding a `where Self: std::marker::Sized` bound
        // note: required for the cast to the object type `test::MyTrait`
        other.method2(self)
    }

    fn method2(&mut self, _other: &MyTrait) {
        // Do other stuff
    }
}