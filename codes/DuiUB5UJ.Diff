Index: source/gui/scripting/JSInterface_GUIManager.cpp
===================================================================
--- source/gui/scripting/JSInterface_GUIManager.cpp	(revision 21006)
+++ source/gui/scripting/JSInterface_GUIManager.cpp	(working copy)
@@ -23,9 +23,15 @@
 #include "gui/IGUIObject.h"
 #include "scriptinterface/ScriptInterface.h"
 #include "ps/GameSetup/Config.h"
-
+#include "ps\VideoMode.h"
+#include "maths\Vector2D.h"
 // Note that the initData argument may only contain clonable data.
 // Functions aren't supported for example!
+CVector2D JSI_GUIManager::GetWindowSize(ScriptInterface::CxPrivate* UNUSED(pCxPrivate))
+{
+	return CVector2D((float) g_VideoMode.GetXRes(), (float) g_VideoMode.GetYRes());
+}
+
 void JSI_GUIManager::PushGuiPage(ScriptInterface::CxPrivate* pCxPrivate, const std::wstring& name, JS::HandleValue initData)
 {
 	g_GUI->PushPage(name, pCxPrivate->pScriptInterface->WriteStructuredClone(initData));
@@ -79,6 +85,7 @@
 
 void JSI_GUIManager::RegisterScriptFunctions(const ScriptInterface& scriptInterface)
 {
+	scriptInterface.RegisterFunction<CVector2D, &GetWindowSize>("GetWindowSize");
 	scriptInterface.RegisterFunction<void, std::wstring, JS::HandleValue, &PushGuiPage>("PushGuiPage");
 	scriptInterface.RegisterFunction<void, std::wstring, JS::HandleValue, &SwitchGuiPage>("SwitchGuiPage");
 	scriptInterface.RegisterFunction<void, &PopGuiPage>("PopGuiPage");
Index: source/gui/scripting/JSInterface_GUIManager.h
===================================================================
--- source/gui/scripting/JSInterface_GUIManager.h	(revision 21006)
+++ source/gui/scripting/JSInterface_GUIManager.h	(working copy)
@@ -23,6 +23,7 @@
 
 namespace JSI_GUIManager
 {
+	CVector2D GetWindowSize(ScriptInterface::CxPrivate* pCxPrivate);
 	void PushGuiPage(ScriptInterface::CxPrivate* pCxPrivate, const std::wstring& name, JS::HandleValue initData);
 	void SwitchGuiPage(ScriptInterface::CxPrivate* pCxPrivate, const std::wstring& name, JS::HandleValue initData);
 	void PopGuiPage(ScriptInterface::CxPrivate* pCxPrivate);