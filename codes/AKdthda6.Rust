fn input(a: &str) -> std::io::Result<String> {
    print!("{}", a);

    use std::io::Write;
    std::io::stdout().flush()?;

    let mut x = String::new();
    std::io::stdin().read_line(&mut x)?;
    Ok(x.trim_right().to_string())
}

fn parse_date(date: String) -> Result<String, ()> {
    let x: Vec<&str> = date.split('.').collect();
    if x.len() == 3 {
        let day: f32 = x[0].parse::<i32>().unwrap() as f32;
        let month: f32 = x[1].parse::<i32>().unwrap() as f32;
        let year: f32 = x[2].parse::<i32>().unwrap() as f32;

        if month < 1.0 || month > 12.0 { return Err(()); }

        let c = x[2].split_at(2).0.parse::<f32>().unwrap();
        let y = x[2].split_at(2).1.parse::<f32>().unwrap();
        println!("c: {}", c);
        let cmonth = (month + 10.0) % 12.0;
        println!("{}", cmonth);
        let weekday = (day + (2.6 * cmonth - 0.2).floor() + y + (y / 4.0).floor() + (c / 4.0).floor() - 2.0 * c) % 7.0;
        let result = format!("{} der {}. {}, {}",
                         match weekday as i32 {
                             0 => "Sonntag",
                             1 => "Montag",
                             2 => "Dienstag",
                             3 => "Mittwoch",
                             4 => "Donnerstag",
                             5 => "Freitag",
                             6 => "Samstag",
                             _ => ""
                         },
                         day.to_string(),
                         match month as i32 {
                             1 => "January",
                             2 => "February",
                             3 => "March",
                             4 => "April",
                             5 => "May",
                             6 => "Juny",
                             7 => "July",
                             8 => "August",
                             9 => "September",
                             10 => "October",
                             11 => "November",
                             12 => "December",
                             _ => ""
                         }, year.to_string());
        return Ok(result);
    }
    Err(())
}


fn main() {
    let input = input("Date input: (DD.MM.YYYY): ").unwrap();
    println!("Result: {}", parse_date(input).unwrap());
}