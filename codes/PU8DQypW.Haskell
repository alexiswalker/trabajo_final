firsthalf :: [a] -> [a]
firsthalf xs = take (length xs `div` 2) xs

secondhalf :: [a] -> [a]
secondhalf xs = drop (length xs `div` 2) xs

merge :: Ord a => [a] -> [a] -> [a]
merge xs [] = xs
merge [] ys = ys
merge (x:xs) (y:ys)
			| x <= y = x:(merge xs (y:ys))
			| otherwise = y:(merge (x:xs) ys)

mergeSort :: Ord a => [a] -> [a]
mergeSort [] = []
mergeSort [x] = [x]
mergeSort xs = merge (mergeSort (firsthalf xs)) (mergeSort (secondhalf xs))