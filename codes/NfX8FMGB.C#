using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace Digger
{
	class Terrain : ICreature
	{
		public CreatureCommand Act(int x, int y)
		{
			return new CreatureCommand();
		}

		public bool DeadInConflict(ICreature conflictedObject)
		{
			return true;
		}

		public int GetDrawingPriority()
		{
			return 10;
		}

		public string GetImageFileName()
		{
			return "Terrain.png";
		}
	}

	class Player : ICreature
	{
		public CreatureCommand Act(int x, int y)
		{
			var moving = new CreatureCommand();
			switch (Game.KeyPressed)
			{
				case Keys.Up:
					if (y - 1 >= 0)
						moving.DeltaY -= 1;
					break;
				case Keys.Down:
					if (y + 1 < Game.MapHeight)
						moving.DeltaY += 1;
					break;
				case Keys.Left:
					if (x - 1 >= 0)
						moving.DeltaX -= 1;
					break;
				case Keys.Right:
					if (x + 1 < Game.MapWidth)
						moving.DeltaX += 1;
					break;
			}
			return moving;
		}

		public bool DeadInConflict(ICreature conflictedObject)
		{
			return (conflictedObject is Sack);
		}

		public int GetDrawingPriority()
		{
			return 1;
		}

		public string GetImageFileName()
		{
			return "Digger.png";
		}
	}

	class Sack : ICreature
	{
		int Blocks;

		public CreatureCommand Act(int x, int y)
		{
			if (y + 1 < Game.MapHeight)
			{
				if (Game.Map[x, y+1] == null || (Game.Map[x, y+1] is Player) && Blocks > 0)
				{
					Blocks++;
					return new CreatureCommand { DeltaY = 1 };
				}
			}

			if (Blocks > 1)
				return new CreatureCommand { TransformTo = new Gold() };
			Blocks = 0;
			return new CreatureCommand();
		}

		public bool DeadInConflict(ICreature conflictedObject)
		{
			return false;
		}

		public int GetDrawingPriority()
		{
			return 5;
		}

		public string GetImageFileName()
		{
			return "Sack.png";
		}
	}

	class Gold : ICreature
	{
		public CreatureCommand Act (int x, int y)
		{
			return new CreatureCommand();
		}

		public bool DeadInConflict(ICreature conflictedObject)
		{
			if (conflictedObject is Player)
				Game.Scores += 10;
			return true;
		}

		public int GetDrawingPriority()
		{
			return 5;
		}

		public string GetImageFileName()
		{
			return "Gold.png";
		}
	}
}