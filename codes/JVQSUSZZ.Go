func CalculateModelHash(asset *models.Asset) string {
    result := regexp.MustCompile("(?i)[^A-ZА-Я\\d]").ReplaceAllString(asset.Name, "")
    result = regexp.MustCompile("(?i)[Ii|lJ1]").ReplaceAllString(result, "1")
    result = regexp.MustCompile("(?i)[ЁёеЕ]").ReplaceAllString(result, "e")
    result = regexp.MustCompile("(?i)[Аа]").ReplaceAllString(result, "a")
    result = regexp.MustCompile("(?i)[вВбБьЬ]").ReplaceAllString(result, "b")
    result = regexp.MustCompile("(?i)[Гг]").ReplaceAllString(result, "r")
    result = regexp.MustCompile("(?i)[Зз]").ReplaceAllString(result, "3")
    result = regexp.MustCompile("(?i)[Кк]").ReplaceAllString(result, "k")
    result = regexp.MustCompile("(?i)[Мм]").ReplaceAllString(result, "m")
    result = regexp.MustCompile("(?i)[Нн]").ReplaceAllString(result, "h")
    result = regexp.MustCompile("(?i)[Oo0QоО]").ReplaceAllString(result, "o")
    result = regexp.MustCompile("(?i)[Рр]").ReplaceAllString(result, "o")
    result = regexp.MustCompile("(?i)[Сс]").ReplaceAllString(result, "c")
    result = regexp.MustCompile("(?i)[Тт]").ReplaceAllString(result, "t")
    result = regexp.MustCompile("(?i)[Уу]").ReplaceAllString(result, "y")
    result = regexp.MustCompile("(?i)[Хх]").ReplaceAllString(result, "x")
    result = regexp.MustCompile("(?i)[Чч]").ReplaceAllString(result, "4")
    result = regexp.MustCompile("(?i)[ШшЩщ]").ReplaceAllString(result, "w")
    return strings.ToUpper(result)
}