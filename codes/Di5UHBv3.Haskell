permute :: String -> [String]
permute str = rotate str len len
    where len = length str

rotate :: String -> Int -> Int -> [String]
rotate _ _ 0 = []
rotate s 1 _ = [s]
rotate (ch:chs) len rcnt =
	map (\x -> ch : x) (rotate chs (len-1) (len-1))++
    rotate (chs ++ [ch]) len (rcnt-1)

checkPermutation :: [String] -> String -> Bool
checkPermutation [] s = False
checkPermutation (x:xs) s = if x == s then True else (checkPermutation xs s)  

main = do
	s <- getLine
	s2 <- getLine
	let x = permute s
	print (checkPermutation x s2)