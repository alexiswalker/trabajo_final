diff --git a/Assets/Lib/Ferr/2DTerrain/Editor/Ferr2DT_PathTerrainEditor.cs b/Assets/Lib/Ferr/2DTerrain/Editor/Ferr2DT_PathTerrainEditor.cs
index a7cc113..dce1384 100644
--- a/Assets/Lib/Ferr/2DTerrain/Editor/Ferr2DT_PathTerrainEditor.cs
+++ b/Assets/Lib/Ferr/2DTerrain/Editor/Ferr2DT_PathTerrainEditor.cs
@@ -55,8 +55,13 @@ public class Ferr2DT_PathTerrainEditor : Editor {
 	SerializedProperty collidersTop;
 	SerializedProperty collidersBottom;
 	SerializedProperty colliderThickness;
-	
-	private void LoadProperties() {
+
+    SerializedProperty ignoreTop;
+    SerializedProperty ignoreBottom;
+    SerializedProperty ignoreLeft;
+    SerializedProperty ignoreRight;
+
+    private void LoadProperties() {
 		fill                     = serializedObject.FindProperty("fill");
 		fillY                    = serializedObject.FindProperty("fillY");
 		fillZ                    = serializedObject.FindProperty("fillZ");
@@ -96,7 +101,12 @@ public class Ferr2DT_PathTerrainEditor : Editor {
 		collidersTop             = serializedObject.FindProperty("collidersTop");
 		collidersBottom          = serializedObject.FindProperty("collidersBottom");
 		colliderThickness        = serializedObject.FindProperty("colliderThickness");
-	}
+
+        ignoreTop                = serializedObject.FindProperty("ignoreTop");
+        ignoreBottom             = serializedObject.FindProperty("ignoreBottom");
+        ignoreLeft               = serializedObject.FindProperty("ignoreLeft");
+        ignoreRight              = serializedObject.FindProperty("ignoreRight");
+    }
 	
     void OnEnable  () {
         Ferr2DT_PathTerrain terrain = (Ferr2DT_PathTerrain)target;
@@ -212,7 +222,13 @@ public class Ferr2DT_PathTerrainEditor : Editor {
 				        }
 			        }
 		        }
-	        });
+
+                EditorGUILayout.LabelField("Hide edges:");
+                EditorGUILayout.PropertyField(ignoreTop, new GUIContent("Top"));
+                EditorGUILayout.PropertyField(ignoreLeft, new GUIContent("Left"));
+                EditorGUILayout.PropertyField(ignoreRight, new GUIContent("Right"));
+                EditorGUILayout.PropertyField(ignoreBottom, new GUIContent("Bottom"));
+            });
         }
 		EditorGUI.indentLevel = 0;
 
diff --git a/Assets/Lib/Ferr/2DTerrain/Scripts/Ferr2DT_PathTerrain.cs b/Assets/Lib/Ferr/2DTerrain/Scripts/Ferr2DT_PathTerrain.cs
index 3dfe073..0e48414 100644
--- a/Assets/Lib/Ferr/2DTerrain/Scripts/Ferr2DT_PathTerrain.cs
+++ b/Assets/Lib/Ferr/2DTerrain/Scripts/Ferr2DT_PathTerrain.cs
@@ -206,7 +206,12 @@ public class Ferr2DT_PathTerrain : MonoBehaviour, Ferr2D_IPath {
     public bool  collidersTop      = true;
     public bool  collidersBottom   = true;
 	public float colliderThickness = 0.1f;
-    
+
+    public bool ignoreTop;
+    public bool ignoreBottom;
+    public bool ignoreLeft;
+    public bool ignoreRight;
+
     /// <summary>
     /// This property will call SetMaterial when set.
     /// </summary>
@@ -1049,6 +1054,8 @@ public class Ferr2DT_PathTerrain : MonoBehaviour, Ferr2D_IPath {
 			    unitsPerUV.y = edgeMat.mainTexture.height / pixelsPerUnit;
             }
 
+	        aMaterial.Src = this;
+
             if (aRecreate) {
                 Build(true);
             }
diff --git a/Assets/Lib/Ferr/2DTerrain/Scripts/Ferr2DT_TerrainMaterial.cs b/Assets/Lib/Ferr/2DTerrain/Scripts/Ferr2DT_TerrainMaterial.cs
index 9b085a2..1f660f8 100644
--- a/Assets/Lib/Ferr/2DTerrain/Scripts/Ferr2DT_TerrainMaterial.cs
+++ b/Assets/Lib/Ferr/2DTerrain/Scripts/Ferr2DT_TerrainMaterial.cs
@@ -41,6 +41,23 @@ public class Ferr2DT_TerrainMaterial : MonoBehaviour, IFerr2DTMaterial
     /// <param name="aDirection">Direction to get.</param>
     /// <returns>The given direction, or the first direction, or a default, based on what actually exists.</returns>
     public Ferr2DT_SegmentDescription GetDescriptor(Ferr2DT_TerrainDirection aDirection) {
+        if (Src == null) {
+            Debug.Log("Terrain must be always set for t-material for ignore-edges functionality.");
+        } else {
+            bool hide = false;
+
+            hide |= aDirection == Ferr2DT_TerrainDirection.Top && Src.ignoreTop;
+            hide |= aDirection == Ferr2DT_TerrainDirection.Bottom && Src.ignoreBottom;
+            hide |= aDirection == Ferr2DT_TerrainDirection.Left && Src.ignoreLeft;
+            hide |= aDirection == Ferr2DT_TerrainDirection.Right && Src.ignoreRight;
+
+            if (hide) {
+                var fake = new Ferr2DT_SegmentDescription();
+                fake.body = new Rect[] { new Rect(0, 0, 0, 0) };
+                return fake;
+            }
+        }
+
         ConvertToPercentage();
         for (int i = 0; i < descriptors.Length; i++) {
             if (descriptors[i].applyTo == aDirection) return descriptors[i];
@@ -131,5 +148,9 @@ public class Ferr2DT_TerrainMaterial : MonoBehaviour, IFerr2DTMaterial
             aNativeRect.width  * edgeMaterial.mainTexture.width,
             aNativeRect.height * edgeMaterial.mainTexture.height);
     }
+
+    public Ferr2DT_PathTerrain Src { get; set; }
+
+
     #endregion
 }
diff --git a/Assets/Lib/Ferr/Common/2DT/Ferr2DT_Material.cs b/Assets/Lib/Ferr/Common/2DT/Ferr2DT_Material.cs
index 836d638..811d112 100644
--- a/Assets/Lib/Ferr/Common/2DT/Ferr2DT_Material.cs
+++ b/Assets/Lib/Ferr/Common/2DT/Ferr2DT_Material.cs
@@ -1,5 +1,6 @@
 ï»¿using UnityEngine;
 using System.Collections;
+using Lvichki;
 
 public class Ferr2DT_Material : ScriptableObject, IFerr2DTMaterial {
 	#region Fields
@@ -33,7 +34,8 @@ public class Ferr2DT_Material : ScriptableObject, IFerr2DTMaterial {
     /// <param name="aDirection">Direction to get.</param>
     /// <returns>The given direction, or the first direction, or a default, based on what actually exists.</returns>
 	public Ferr2DT_SegmentDescription GetDescriptor(Ferr2DT_TerrainDirection aDirection) {
-		ConvertToPercentage();
+
+        ConvertToPercentage();
 		for (int i = 0; i < _descriptors.Length; i++) {
 			if (_descriptors[i].applyTo == aDirection) return _descriptors[i];
 		}
@@ -131,6 +133,9 @@ public class Ferr2DT_Material : ScriptableObject, IFerr2DTMaterial {
 			aNativeRect.width  * w,
 			aNativeRect.height * h);
 	}
+
+    public Ferr2DT_PathTerrain Src { get; set; }
+
     #endregion
 	
 	#if UNITY_EDITOR
diff --git a/Assets/Lib/Ferr/Common/2DT/IFerr2DTMaterial.cs b/Assets/Lib/Ferr/Common/2DT/IFerr2DTMaterial.cs
index 2d3b262..f80f35a 100644
--- a/Assets/Lib/Ferr/Common/2DT/IFerr2DTMaterial.cs
+++ b/Assets/Lib/Ferr/Common/2DT/IFerr2DTMaterial.cs
@@ -14,4 +14,6 @@ public interface IFerr2DTMaterial {
 	Rect                       ToScreen     (Rect aNativeRect);
 	Rect                       ToNative     (Rect aPixelRect);
 	Rect                       ToPixels     (Rect aNativeRect);
+
+    Ferr2DT_PathTerrain Src { get; set; }
 }
\ No newline at end of file