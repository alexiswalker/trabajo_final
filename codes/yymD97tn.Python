import xlrd
import kmeans
import numpy as np
import random


def cluster_points(X, mu):
    clusters = {}
    for x in X:
        bestmukey = min([(i[0], np.linalg.norm(x - mu[i[0]])) for i in enumerate(mu)], key=lambda t: t[1])[0]
        try:
            clusters[bestmukey].append(x)
        except KeyError:
            clusters[bestmukey] = [x]
    return clusters


def reevaluate_centers(mu, clusters):
    newmu = []
    keys = sorted(clusters.keys())
    for k in keys:
        newmu.append(np.mean(clusters[k], axis=0))
    return newmu


def has_converged(mu, oldmu):
    return (set([tuple(a) for a in mu]) == set([tuple(a) for a in oldmu]))


def find_centers(X, K):
    # Initialize to K random centers
    oldmu = np.array(random.sample(X, K))
    mu = np.array(random.sample(X, K))
    while not has_converged(mu, oldmu):
        oldmu = mu
        # Assign all points in X to clusters
        clusters = cluster_points(X, mu)
        # Reevaluate centers
        mu = reevaluate_centers(oldmu, clusters)
    return (mu, clusters)


date = xlrd.open_workbook('date.xlsx')
sheet = date.sheet_by_index(0)

dataset = []
for i in range(71):
    dataset.append([])
for i in range(0, 71):
    for j in range(0, 8):
        dataset[i].append(sheet.row_values(i)[j])

X = []
for i in range(1, 71):
    X.append(np.array([dataset[i][4], dataset[i][6]]))

find_centers(X, 4)