def dodawanie(*args):
  suma = 0.0
  for arg in args:
    if (type(arg) is list) or (type(arg) is tuple ):
      for i in arg:
        if (type(i) is int) or (type(i) is float):
            suma += i
        else:
            return ("Argument nie jest liczba")
    else:
        if (type(arg) is int) or (type(arg) is float):
            suma += arg
        else:
            return ("Argument nie jest liczba")
  return suma

def mnozenie(*args):
    iloczyn = 1.0
    if (len(args) == 2):
        if(not(type(args[0]) is list) or (type(args[0]) is tuple )):
            if ((type(args[1]) is list) or (type(args[1]) is tuple )):
                for i in range(0, len(args[1])):
                    if (type(args[1][i]) is int) or (type(args[1][i]) is float):
                        args[1][i] =  args[1][i] * args[0]
                    else:
                        return ("Argument nie jest liczba")
                return args[1]
    else:
        for arg in args:
            if (type(arg) is list) or (type(arg) is tuple ):
                for i in arg:
                    if (type(i) is int) or (type(i) is float):
                        iloczyn = iloczyn * i
                    else:
                        return ("Argument nie jest liczba")
            else:
                if (type(arg) is int) or (type(arg) is float):
                    iloczyn = iloczyn * arg
                else:
                    return ("Argument nie jest liczba")
        return iloczyn



#p = dodawanie(1, [1,2], 2)
#print(p)

print(dodawanie(1.3, [1,2], 2))
print(dodawanie(1, 1,2,2))
print(dodawanie(1, (1,2,2)))

print(mnozenie(2, [1,2.3242,2], 3, [2,3,6]))

print(mnozenie("Aasdddasasd"))
#ZAD2

def po_pierwszym(kolekcja, reverse = False):
    return sorted(kolekcja, key=lambda p: p[0], reverse = reverse)

def po_drugim(kolekcja, reverse = False):
    return sorted(kolekcja, key=lambda p: p[1], reverse = reverse)

l = [[5,4], [3,9], [1,2]]
p = po_pierwszym(l, reverse = True)
d = po_drugim(l)
print("Po pierwszym",p) 
print("Po drugim",d)

#ZAD3

def procent_skladany(k,n,m,r):
    proc = k*(1+(r/m))**(n*m)
    return proc

p = procent_skladany(1000, 10, 1, 0.4)
print(p)

def dlugosc_odcinka(Xa, Ya, Xb, Yb):
    dlu = math.sqrt((Xb-Xa)**2 + (Ya-Yb)**2)
    return dlu

def srodek_odcinka(Xa, Ya, Xb, Yb):
    sro1 = ((Xa+Xb)/2)
    sro2 = ((Ya+Yb)/2)
    return sro1, sro2
    

odc = dlugosc_odcinka(-2,5,5,9)
sro = srodek_odcinka(-2,5,5,9)

print(odc)
print(sro)