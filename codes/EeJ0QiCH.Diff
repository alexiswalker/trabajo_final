# HG changeset patch
# User rualex <drobyshev83@gmail.com>
# Date 1316203457 -14400
# Node ID 2dcb588c11478bf628a20d8baa39b4515c424b08
# Parent  b4fd3ec9ade76d5a4cdcf93171979b8656c5d9d9
Spell/Hunter: Kill Command

diff -r b4fd3ec9ade7 -r 2dcb588c1147 sql/updates/world/2011_09_16_00_spell_hun_kill_command.sql
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/sql/updates/world/2011_09_16_00_spell_hun_kill_command.sql	Sat Sep 17 00:04:17 2011 +0400
@@ -0,0 +1,1 @@
+REPLACE INTO `spell_script_names` (`spell_id`, `ScriptName`) VALUES (34026, 'spell_hun_kill_command');
diff -r b4fd3ec9ade7 -r 2dcb588c1147 src/server/scripts/Spells/spell_hunter.cpp
--- a/src/server/scripts/Spells/spell_hunter.cpp	Sat Sep 17 00:04:12 2011 +0400
+++ b/src/server/scripts/Spells/spell_hunter.cpp	Sat Sep 17 00:04:17 2011 +0400
@@ -451,6 +451,66 @@
     }
 };
 
+// 34026 Kill Command
+class spell_hun_kill_command : public SpellScriptLoader
+{
+public:
+    spell_hun_kill_command() : SpellScriptLoader("spell_hun_kill_command") { }
+
+    class spell_hun_kill_command_SpellScript : public SpellScript
+    {
+        PrepareSpellScript(spell_hun_kill_command_SpellScript)
+
+        SpellCastResult CheckTarget()
+        {
+            Player* caster = GetCaster()->ToPlayer();
+            if (!caster)
+                return SPELL_FAILED_ERROR;
+
+            Unit* victim = caster->GetSelectedUnit();
+            Unit* pet = caster->GetGuardianPet();
+            if (!victim || !pet)
+                return SPELL_FAILED_ERROR;
+
+            if (pet->GetExactDist2d(victim) > 5.0f)
+                return SPELL_FAILED_OUT_OF_RANGE;
+
+            if (caster->IsFriendlyTo(victim))
+                return SPELL_FAILED_BAD_TARGETS;
+
+            return SPELL_CAST_OK;
+        }
+
+        void HandleDummy(SpellEffIndex effIndex)
+        {
+            if (Player* caster = GetCaster()->ToPlayer())
+            {
+                SpellEntry const* spell = GetSpellInfo();
+                Unit* victim = caster->GetSelectedUnit();
+                Unit* pet = caster->GetGuardianPet();
+                if (!pet || !victim)
+                    return;
+
+                pet->Attack(victim, true);
+                int32 bp0 = int32(849 + caster->GetTotalAttackPowerValue(RANGED_ATTACK) * 0.516f); // BASE_ATTACK ???
+                pet->CastCustomSpell(victim, spell->EffectBasePoints[effIndex], &bp0, NULL, NULL, true);
+            }
+        }
+
+        void Register()
+        {
+            OnEffect += SpellEffectFn(spell_hun_kill_command_SpellScript::HandleDummy, EFFECT_1, SPELL_EFFECT_SCRIPT_EFFECT);
+            OnCheckCast += SpellCheckCastFn(spell_hun_kill_command_SpellScript::CheckTarget);
+        }
+    };
+
+    SpellScript* GetSpellScript() const
+    {
+        return new spell_hun_kill_command_SpellScript();
+    }
+};
+
+
 void AddSC_hunter_spell_scripts()
 {
     new spell_hun_invigoration();
@@ -462,4 +522,5 @@
     new spell_hun_pet_heart_of_the_phoenix();
     new spell_hun_pet_carrion_feeder();
     new spell_hun_steady_shot();
+    new spell_hun_kill_command();
 }
\ No newline at end of file