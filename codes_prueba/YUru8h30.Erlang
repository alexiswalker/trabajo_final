-module(exam).
-export([testTree/0, init/0, init/1, insert/2, getOnly7/1, testTree/1]).

%% Создание деревьев
init() -> [].
init(Element) -> [Element, none, none].

%% Тестовое дерево
testTree() ->
  [100, [35, [27, none, none], [47, [40, none, none], [50, none, none]]], [107, none, none]].

%% Украшательство: можно удалить и вызывать getOnly7(Tree, [])
getOnly7(Tree) -> getOnly7(Tree, []).

%% Получение дерева из найденых
getOnly7(Tree, NewTree) when Tree == none ->
  NewTree;

getOnly7(Tree, NewTree) when Tree == [] ->
  NewTree;

getOnly7([Node, LeftTree, RightTree], NewTree) when  Node rem 10 == 7 ->
  CurrentTree = insert(NewTree, Node),
  FromLeftTree = getOnly7(LeftTree, CurrentTree),
  FromRightTree = getOnly7(RightTree, FromLeftTree);

getOnly7([Node, LeftTree, RightTree], NewTree) ->
  CurrentTree = NewTree,
  FromLeftTree = getOnly7(LeftTree, CurrentTree),
  FromRightTree = getOnly7(RightTree, FromLeftTree).


%% вставка числа в дерево
insert(Tree, Element) when Tree == [] ->
  init(Element);
insert([Node, LeftTree, RightTree], Element) when Node > Element ->
  [Node, insert(LeftTree, Element), RightTree];
insert([Node, LeftTree, RightTree], Element) when Node =< Element ->
  [Node, LeftTree, insert(RightTree, Element)];
insert(Tree, Element) when Tree == none ->
  init(Element).