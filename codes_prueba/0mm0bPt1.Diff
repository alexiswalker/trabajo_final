@@ -1014,28 +1014,29 @@ bool AutoEquipItem(Player* player, uint32 itemId)
 
     Item* srcItem = player->GetItemByEntry(itemId);
     if (!srcItem)
         return false;
 
-    // always unequip mainhand when trying to equip artifact
+    // always unequip both mainhand and offhand when trying to equip artifact
     if (srcItem->GetTemplate()->GetArtifactID())
     {
-        if (Item* mainHand = player->GetItemByPos(INVENTORY_SLOT_BAG_0, EQUIPMENT_SLOT_MAINHAND))
-        {
-            ItemPosCountVec dest;
-            InventoryResult msg = player->CanStoreItem(NULL_BAG, NULL_SLOT, dest, mainHand, false);
-            if (msg == EQUIP_ERR_OK)
-            {
-                player->RemoveItem(mainHand->GetBagSlot(), mainHand->GetSlot(), true);
-                player->StoreItem(dest, mainHand, true);
-            }
-            else // Don't allow changing specs with no free space in bags.
+        for (uint32 slot : { EQUIPMENT_SLOT_MAINHAND, EQUIPMENT_SLOT_OFFHAND })
+            if (Item* oldItem = player->GetItemByPos(INVENTORY_SLOT_BAG_0, slot))
             {
-                player->SendEquipError(msg);
-                return false;
+                ItemPosCountVec dest;
+                InventoryResult msg = player->CanStoreItem(NULL_BAG, NULL_SLOT, dest, oldItem, false);
+                if (msg == EQUIP_ERR_OK)
+                {
+                    player->RemoveItem(oldItem->GetBagSlot(), oldItem->GetSlot(), true);
+                    player->StoreItem(dest, oldItem, true);
+                }
+                else // Don't allow changing specs with no free space in bags.
+                {
+                    player->SendEquipError(msg);
+                    return false;
+                }
             }
-        }
     }
 
     uint16 dest;
     InventoryResult msg = player->CanEquipItem(NULL_SLOT, dest, srcItem, !srcItem->IsBag());
     if (msg != EQUIP_ERR_OK)