use iron::prelude::*;
use iron::status;
use params::Params;
use params::FromValue;
use db;
use mysql;

pub fn list_source_paths(_request: &mut Request) -> IronResult<Response> {
	/// Provides all available source paths

	let connection = db::get_connection();
	let result = connection.prep_exec(r"SELECT * FROM `sources`", ()).unwrap();

	let print_row = |row| {
		let id: i32 = row["id"];
		println!("{}", id);
	};

	result.for_each(print_row);

	Ok(Response::with((status::Ok, "ok")))
}

pub fn post_handler(_request: &mut Request) -> IronResult<Response> {
	Ok(Response::with((status::Ok, "ok")))
}

pub fn add_source_path(request: &mut Request) -> IronResult<Response> {
	/// Adds source path to the database
	let params = request.get_ref::<Params>().unwrap();

	let path = &params["path"];

	let connection = db::get_connection();
	let result = connection.prep_exec(r"
	     INSERT INTO `sources` 
	             (`full_path`) 
	     VALUES  (:path)", 
	     params!{"path" => String::from_value(path)});

	match result {
		Ok(_) => Ok(Response::with((status::Ok, "ok"))),
		Err(_) => Ok(Response::with((status::InternalServerError, "Cannot add data to DB"))),
	}
}