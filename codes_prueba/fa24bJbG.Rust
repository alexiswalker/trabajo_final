    fn _find<'a>(&self, current: &'a mut Link<T>, data: &T) -> &'a mut Link<T>{

        let val = match *current {
            None => 0,
            Some(ref mut n) => {
                if n.data > *data {
                    1
                } else if n.data < *data {
                    2
                } else {
                    0
                }
            }
        };

        match val {
            1 => self._find(&mut current.as_mut().unwrap().left, data),
            2 => self._find(&mut current.as_mut().unwrap().right, data),
            _ => current,
        }
	}