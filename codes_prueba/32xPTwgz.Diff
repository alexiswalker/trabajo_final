diff --git a/contrib/src/lua/foo.patch b/contrib/src/lua/foo.patch
new file mode 100644
index 0000000000..73999cbfc8
--- /dev/null
+++ b/contrib/src/lua/foo.patch
@@ -0,0 +1,28 @@
+--- lua/src/lobject.c.orig     2017-12-30 18:52:43.057712068 +0100
++++ lua/src/lobject.c  2017-12-30 18:53:11.308598240 +0100
+@@ -86,10 +86,24 @@
+   }
+ }
+ 
++double us_strtod( const char *str, char **end )
++{
++    locale_t loc = newlocale (LC_NUMERIC_MASK, "C", NULL);
++    locale_t oldloc = uselocale (loc);
++    double res = strtod (str, end);
++
++    if (loc != (locale_t)0)
++    {
++        uselocale (oldloc);
++        freelocale (loc);
++    }
++    return res;
++}
++
+ 
+ int luaO_str2d (const char *s, lua_Number *result) {
+   char *endptr;
+-  *result = lua_str2number(s, &endptr);
++  *result = us_strtod(s, &endptr);
+   if (endptr == s) return 0;  /* conversion failed */
+   if (*endptr == 'x' || *endptr == 'X')  /* maybe an hexadecimal constant? */
+     *result = cast_num(strtoul(s, &endptr, 16));
diff --git a/contrib/src/lua/rules.mak b/contrib/src/lua/rules.mak
index b1a27c47fc..b30c1b382f 100644
--- a/contrib/src/lua/rules.mak
+++ b/contrib/src/lua/rules.mak
@@ -46,6 +46,7 @@ lua: lua-$(LUA_VERSION).tar.gz .sum-lua
        $(APPLY) $(SRC)/lua/luac-32bits.patch
        $(APPLY) $(SRC)/lua/no-localeconv.patch
        $(APPLY) $(SRC)/lua/lua-ios-support.patch
+       $(APPLY) $(SRC)/lua/foo.patch
 ifdef HAVE_WINSTORE
        $(APPLY) $(SRC)/lua/lua-winrt.patch
 endif