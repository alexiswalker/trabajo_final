diff --git a/dlls/ntdll/virtual.c b/dlls/ntdll/virtual.c
index 5e69eb9..1cae24f 100644
--- a/dlls/ntdll/virtual.c
+++ b/dlls/ntdll/virtual.c
@@ -1113,7 +1113,7 @@ static NTSTATUS map_image( HANDLE hmapping, int fd, char *base, SIZE_T total_siz
 {
     IMAGE_DOS_HEADER *dos;
     IMAGE_NT_HEADERS *nt;
-    IMAGE_SECTION_HEADER *sec;
+    IMAGE_SECTION_HEADER *sec, *sec_copy = NULL;
     IMAGE_DATA_DIRECTORY *imports;
     NTSTATUS status = STATUS_CONFLICTING_ADDRESSES;
     int i;
@@ -1192,9 +1192,18 @@ static NTSTATUS map_image( HANDLE hmapping, int fd, char *base, SIZE_T total_siz
         goto done;
     }
 
+    //FIXME: add reason
+    if (!(sec_copy = RtlAllocateHeap( virtual_heap, 0, sizeof(*sec_copy) *nt->FileHeader.NumberOfSections )))
+    {
+        FIXME( "out of memory in virtual heap for image %p\n", base );
+        status = STATUS_NO_MEMORY;
+        goto error;
+    }
+    
+    memcpy( sec_copy, sec, sizeof(*sec_copy) *nt->FileHeader.NumberOfSections );
+    sec = sec_copy;
 
     /* map all the sections */
-
     for (i = pos = 0; i < nt->FileHeader.NumberOfSections; i++, sec++)
     {
         static const SIZE_T sector_align = 0x1ff;
@@ -1284,7 +1293,6 @@ static NTSTATUS map_image( HANDLE hmapping, int fd, char *base, SIZE_T total_siz
         }
     }
 
-
     /* perform base relocation, if necessary */
 
     if (ptr != base &&
@@ -1329,7 +1337,7 @@ static NTSTATUS map_image( HANDLE hmapping, int fd, char *base, SIZE_T total_siz
 
     VIRTUAL_SetProt( view, ptr, ROUND_SIZE( 0, header_size ), VPROT_COMMITTED | VPROT_READ );
 
-    sec = (IMAGE_SECTION_HEADER*)((char *)&nt->OptionalHeader+nt->FileHeader.SizeOfOptionalHeader);
+    sec = sec_copy;
     for (i = 0; i < nt->FileHeader.NumberOfSections; i++, sec++)
     {
         SIZE_T size;
@@ -1361,6 +1369,7 @@ static NTSTATUS map_image( HANDLE hmapping, int fd, char *base, SIZE_T total_siz
     }
 
  done:
+    RtlFreeHeap( virtual_heap, 0, sec_copy );
     view->mapping = dup_mapping;
     server_leave_uninterrupted_section( &csVirtual, &sigset );
 
@@ -1372,6 +1381,7 @@ static NTSTATUS map_image( HANDLE hmapping, int fd, char *base, SIZE_T total_siz
     return STATUS_SUCCESS;
 
  error:
+    RtlFreeHeap( virtual_heap, 0, sec_copy );
     if (view) delete_view( view );
     server_leave_uninterrupted_section( &csVirtual, &sigset );
     if (dup_mapping) NtClose( dup_mapping );
@@ -1496,6 +1506,8 @@ NTSTATUS virtual_create_builtin_view( void *module )
     for (i = 0; i < nt->FileHeader.NumberOfSections; i++)
     {
         BYTE flags = VPROT_COMMITTED;
+        
+        FIXME(">>>>>>section_chars %s: %x\n", sec[i].Name, sec[i].Characteristics);
 
         if (sec[i].Characteristics & IMAGE_SCN_MEM_EXECUTE) flags |= VPROT_EXEC;
         if (sec[i].Characteristics & IMAGE_SCN_MEM_READ) flags |= VPROT_READ;